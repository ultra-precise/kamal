1. JSONP

https://stackoverflow.com/questions/3839966/can-anyone-explain-what-jsonp-is-in-layman-terms


function foo(response) {
  document.getElementById("output").innerHTML = response.bar;
};

var tag = document.createElement("script");
tag.src = 'somewhere_else.php?callback=foo';

document.getElementsByTagName("head")[0].appendChild(tag);

-------

function foo(response) {

console.log(response);
};

<script src="https://www.bing.com/?callback=foo"></script>



2. Chrome Extension

https://chrome.google.com/webstore/detail/allow-control-allow-origi/nlfbmbojpeacfghkpbjhddihlkkiljbi/related?hl=en



3. Chrome Web-Security Disable


Just as Baksteen stated, you cannot change this header value in JavaScript. You would have to edit your server 

configuration to allow cross origin requests.

But: After reading your comments, I think you need a solution for debugging and testing only.

In that case, you can use Chrome and start it with special unsafe parameters. If you provide this parameters to 

Chrome, it will allow you cross domain requests.

Do not use this chrome instance for other things than testing your page!

chrome --disable-web-security --user-data-dir
I tried several Add-ons for Firefox and Chrome, but they did not work with recent versions of the browsers. So I 

recommend to switch to chrome and use the parameters above to test your API calls.

If you are interested in a more powerful solution, you may want to use a Debugging Proxy, like Fiddler from 

Telerik. You may write a custom rule, so Fiddler changes your headers before the request leaves your PC. But you 

have to dig into the tool, before you can use all its powers. This may be interesting, because it may help you out 

on more than just this debugging issue

===========

Other tags:

<frame>, <iframe>, <embed> or <object> . 

-------------------

Using simple html,

 <div> 
    <object type="text/html" data="http://validator.w3.org/" width="800px" height="600px" 

style="overflow:auto;border:5px ridge blue">
    </object>
 </div>



Or jquery,

<script>
        $("#mydiv")
            .html('<object data="http://your-website-domain"/>');
</script>

-------------------------------------------
===========================================


