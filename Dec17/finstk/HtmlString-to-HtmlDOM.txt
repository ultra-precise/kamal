DOMParser :
https://developer.mozilla.org/en-US/docs/Web/API/DOMParser

Parse html-string to html-DOM-tree :

The DOMParser interface provides the ability to parse XML or HTML source code from a string into a DOM Document.

Note: XMLHttpRequest can parse XML and HTML directly from a URL-addressable resource, returning a Document in its response property.

---------------------------

Error handling:

Note that if the parsing process fails, the DOMParser does not throw an exception, but instead returns an error document:


<parsererror xmlns="http://www.mozilla.org/newlayout/xml/parsererror.xml">
(error description)
<sourcetext>(a snippet of the source XML)</sourcetext>
</parsererror>


The parsing errors are also reported to the Error Console, with the document URI (see below) as the source of the error.

--------------------------
Parsing an SVG or HTML document :


The DOMParser can also be used to parse a SVG document (Firefox 10.0 / Thunderbird 10.0 / SeaMonkey 2.7) or an HTML document (Firefox 12.0 / Thunderbird 12.0 / SeaMonkey 2.9). There are three different results possible, selected by the MIME type given. If the MIME type is text/xml, the resulting object will be an XMLDocument, if the MIME type is image/svg+xml, it will be an SVGDocument and if the MIME type is text/html, it will be an HTMLDocument.

var parser = new DOMParser();
var doc = parser.parseFromString(stringContainingXMLSource, "application/xml");
// returns a Document, but not a SVGDocument nor a HTMLDocument

parser = new DOMParser();
doc = parser.parseFromString(stringContainingSVGSource, "image/svg+xml");
// returns a SVGDocument, which also is a Document.

parser = new DOMParser();
doc = parser.parseFromString(stringContainingHTMLSource, "text/html");
// returns a HTMLDocument, which also is a Document.


++++++++++++++++++++++++++++++++++++
XMLSerializer :
https://developer.mozilla.org/en-US/docs/Web/API/XMLSerializer
https://developer.mozilla.org/en-US/docs/Web/Guide/Parsing_and_serializing_XML


Parse html-DOM-tree to html-string

You can perform the opposite operation — converting a DOM tree into XML or HTML source — using the XMLSerializer interface.

Example:

var s = new XMLSerializer();
 var d = document;
 var str = s.serializeToString(d);
 saveXML(str);


================
